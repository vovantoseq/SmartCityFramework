from flask import Flask, request, jsonify
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///smart_city.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db = SQLAlchemy(app)

# Model for Traffic Data
class Traffic(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    location = db.Column(db.String(100), nullable=False)
    congestion_level = db.Column(db.String(50), nullable=False)  # e.g., Low, Medium, High

# Model for Environmental Sensor Data
class Sensor(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    location = db.Column(db.String(100), nullable=False)
    temperature = db.Column(db.Float, nullable=False)
    humidity = db.Column(db.Float, nullable=False)

# Initialize the database
with app.app_context():
    db.create_all()

@app.route('/')
def home():
    return "Welcome to the Smart City Framework API!"

@app.route('/traffic', methods=['POST'])
def add_traffic_data():
    data = request.get_json()
    new_traffic = Traffic(location=data['location'], congestion_level=data['congestion_level'])
    db.session.add(new_traffic)
    db.session.commit()
    return jsonify({'message': 'Traffic data added successfully'}), 201

@app.route('/traffic', methods=['GET'])
def get_traffic_data():
    traffic_data = Traffic.query.all()
    return jsonify([{'id': t.id, 'location': t.location, 'congestion_level': t.congestion_level} for t in traffic_data]), 200

@app.route('/sensor', methods=['POST'])
def add_sensor_data():
    data = request.get_json()
    new_sensor = Sensor(location=data['location'], temperature=data['temperature'], humidity=data['humidity'])
    db.session.add(new_sensor)
    db.session.commit()
    return jsonify({'message': 'Sensor data added successfully'}), 201

@app.route('/sensor', methods=['
